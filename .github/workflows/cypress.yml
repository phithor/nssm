name: Cypress E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'dashboard/**'
      - 'cypress/**'
      - 'scripts/run_cypress_tests.sh'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'dashboard/**'
      - 'cypress/**'
      - 'scripts/run_cypress_tests.sh'

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Cypress
        run: npm install cypress@^13.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build dashboard container
        run: docker-compose build dashboard

      - name: Start dashboard container
        run: docker-compose up -d dashboard

      - name: Wait for dashboard to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:8501 > /dev/null 2>&1; then
              echo "Dashboard is ready!"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done

          # Check if dashboard started successfully
          if ! curl -f http://localhost:8501 > /dev/null 2>&1; then
            echo "Dashboard failed to start"
            docker-compose logs dashboard
            exit 1
          fi

      - name: Run Cypress tests
        run: npx cypress run --config baseUrl=http://localhost:8501

      - name: Upload Cypress screenshots on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress videos on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos

      - name: Clean up containers
        if: always()
        run: docker-compose down

  container-test:
    runs-on: ubuntu-latest
    needs: cypress-run

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build full application
        run: docker-compose build

      - name: Test container startup
        run: |
          docker-compose up -d
          sleep 10

          # Check if all services are healthy
          if docker-compose ps | grep -q "Exit"; then
            echo "Some containers failed to start"
            docker-compose logs
            exit 1
          fi

          # Test dashboard endpoint
          curl -f http://localhost:8501 || exit 1

          echo "All containers started successfully!"

      - name: Clean up
        if: always()
        run: docker-compose down
