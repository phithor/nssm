

services:
  # Base image (built first, used by other services)
  nssm-base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: nssm-base:latest
    # This service doesn't run, just builds the base image

  # NLP service (includes ML dependencies)
  nlp:
    build:
      context: .
      dockerfile: nlp/Dockerfile
    depends_on:
      - nssm-base
    environment:
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - nssm-internal
    volumes:
      - nlp_logs:/app/logs
      - /mnt/user/appdata/nssm/nssm-data/models:/app/models:ro
    restart: unless-stopped

  # Dashboard service (external access)
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - nssm-base
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    networks:
      - nssm-external
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Scraper service
  scraper:
    build:
      context: .
      dockerfile: scraper/Dockerfile
    depends_on:
      - nssm-base
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SCRAPER_INTERVAL_MINUTES=${SCRAPER_INTERVAL_MINUTES:-60}
    networks:
      - nssm-internal
    volumes:
      - scraper_logs:/app/logs
      - /mnt/user/appdata/nssm/nssm-data/scripts:/app/scripts:ro
    command: ["/app/scripts/entrypoint-scraper.sh", "cron"]
    restart: unless-stopped

  # Analytics service (with cron scheduling)
  analytics:
    build:
      context: .
      dockerfile: analytics/Dockerfile
    depends_on:
      - nssm-base
    environment:
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - nssm-internal
    volumes:
      - analytics_logs:/app/logs
      - analytics_data:/app/data
      - /mnt/user/appdata/nssm/nssm-data/scripts:/app/scripts:ro
    command: ["/app/scripts/entrypoint-analytics.sh", "cron"]
    restart: unless-stopped

  # Market data service
  market:
    build:
      context: .
      dockerfile: market/Dockerfile
    depends_on:
      - nssm-base
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MARKET_INTERVAL_MINUTES=${MARKET_INTERVAL_MINUTES:-30}
    networks:
      - nssm-internal
    volumes:
      - market_logs:/app/logs
      - market_cache:/app/cache
      - /mnt/user/appdata/nssm/nssm-data/scripts:/app/scripts:ro
    command: ["/app/scripts/entrypoint-market.sh", "cron"]
    restart: unless-stopped

volumes:
  scraper_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/user/appdata/nssm/nssm-data/logs/scraper
  nlp_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/user/appdata/nssm/nssm-data/logs/nlp
  analytics_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/user/appdata/nssm/nssm-data/logs/analytics
  analytics_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/user/appdata/nssm/nssm-data/data/analytics
  market_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/user/appdata/nssm/nssm-data/logs/market
  market_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/user/appdata/nssm/nssm-data/cache/market

networks:
  nssm-internal:
    driver: bridge
    internal: true
  nssm-external:
    driver: bridge
