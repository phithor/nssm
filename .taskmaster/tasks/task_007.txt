# Task ID: 7
# Title: Fetch Market Data & News Integrations
# Status: pending
# Dependencies: 2
# Priority: medium
# Description: Integrate OpenBB SDK & RSS feeds to pull price/news aligned by ticker+timestamp.
# Details:
• market/data.py: openbb.stocks.price(ticker, interval=1) hourly.
• news/rss.py: feedparser on Oslo Børs & Nasdaq OMX.
• Store market_prices(id,ticker,price,ts) and news(id,ticker,title,url,published).
• Schedule via schedule library.

# Test Strategy:
Integration test with sandbox ticker ‘EQNR’. Assert price row exists, RSS items saved. Use VCR.py to record HTTP.

# Subtasks:
## 1. Design SQLAlchemy Models & Migrations [pending]
### Dependencies: None
### Description: Create market_prices and news tables with appropriate columns, indices, and Alembic migration scripts.
### Details:
• Define models in db/models.py with id UUID PK, ticker FK, timestamps.
• Add unique constraints on (ticker, ts) for market_prices and (ticker, url) for news.
• Generate Alembic revision, test upgrade/downgrade on local Postgres.

## 2. Integrate OpenBB SDK for Price Retrieval [pending]
### Dependencies: 7.1
### Description: Fetch hourly prices via openbb.stocks.price with retry/backoff and rate-limiting middleware.
### Details:
• Wrapper in market/data.py with tenacity retry, backoff ≤60s, and async semaphore rate limiter.
• Normalize response into model schema and commit via session.
• Handle API errors and log.

## 3. Implement RSS Feed Ingestion & Ticker Mapping [pending]
### Dependencies: 7.1
### Description: Parse Oslo Børs & Nasdaq OMX feeds, map articles to tickers, and persist deduped news rows.
### Details:
• Use feedparser to pull XML, extract title, link, published.
• Regex / symbol map file to detect tickers in title/summary.
• Upsert into news table, skipping existing (ticker,url).

## 4. Schedule Periodic Fetch Jobs with Deduplication [pending]
### Dependencies: 7.2, 7.3
### Description: Set up schedule library to run price and news fetchers at defined intervals with idempotency.
### Details:
• Hourly job for prices, 15-min job for news.
• Maintain last-checked timestamps; skip if already processed.
• Add CLI entrypoint scheduler/main.py.

## 5. Write Integration Tests with VCR.py & Sample Feeds [pending]
### Dependencies: 7.4
### Description: Ensure end-to-end data pipeline stores rows and avoids duplicates using recorded HTTP interactions.
### Details:
• Use pytest + VCR.py cassettes for OpenBB & RSS requests.
• Seed in-memory Postgres, run scheduler, assert expected row counts.
• Include fixture CSV of sample RSS for offline test mode.

